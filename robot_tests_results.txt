Test Format: (shortest distance, number of paths) [TEST Reason]
TEST 1: (The robot's starting point matches the treasure's endpoint) [check if start and end point are equal]
The robot's starting point matches the treasure's endpoint.

TEST 2: (4, 0(No path)) [This test checks if no paths are possible and return 0]
Max Step in one direction: 1 | Robot (X, Y)-> (1 , 1) | Treasure (X,Y)-> (5 , 1) 
Error! No paths have been found! Try different coordinates or try changing the max distance limit 
(Shortest distance: 4 , Number of paths: 0 ) 

TEST 3: (4, 6) [This test checks the south-east coordinate]
Max Step in one direction: 2 | Robot (X, Y)-> (0 , 0) | Treasure (X,Y)-> (2 , -2) 
S↓ S↓ E→ E→ 
S↓ E→ S↓ E→ 
S↓ E→ E→ S↓ 
E→ S↓ S↓ E→ 
E→ S↓ E→ S↓ 
E→ E→ S↓ S↓ 
(Shortest distance: 4 , Number of paths: 6 ) 

TEST 4: (5, 10) [This test checks the south-west coordinate]
Max Step in one direction: 3 | Robot (X, Y)-> (0 , 0) | Treasure (X,Y)-> (-3 , -2) 
S↓ S↓ W← W← W← 
S↓ W← S↓ W← W← 
S↓ W← W← S↓ W← 
S↓ W← W← W← S↓ 
W← S↓ S↓ W← W← 
W← S↓ W← S↓ W← 
W← S↓ W← W← S↓ 
W← W← S↓ S↓ W← 
W← W← S↓ W← S↓ 
W← W← W← S↓ S↓ 
(Shortest distance: 5 , Number of paths: 10 ) 

TEST 5: (5, 7) [This test checks the north-east coordinates]
Max Step in one direction: 2 | Robot (X, Y)-> (1 , 2) | Treasure (X,Y)-> (3 , 5) 
N↑ N↑ E→ N↑ E→ 
N↑ N↑ E→ E→ N↑ 
N↑ E→ N↑ N↑ E→ 
N↑ E→ N↑ E→ N↑ 
N↑ E→ E→ N↑ N↑ 
E→ N↑ N↑ E→ N↑ 
E→ N↑ E→ N↑ N↑ 
(Shortest distance: 5 , Number of paths: 7 ) 

TEST 6: (5, 7) [This test checks the north-west coordinates]
Max Step in one direction: 2 | Robot (X, Y)-> (-2 , 5) | Treasure (X,Y)-> (-5 , 7) 
N↑ W← N↑ W← W← 
N↑ W← W← N↑ W← 
W← N↑ N↑ W← W← 
W← N↑ W← N↑ W← 
W← N↑ W← W← N↑ 
W← W← N↑ N↑ W← 
W← W← N↑ W← N↑ 
(Shortest distance: 5 , Number of paths: 7 ) 

TEST 7: (16, 0(No path)) [This test checks impossible straight line]
Max Step in one direction: 15 | Robot (X, Y)-> (0 , 0) | Treasure (X,Y)-> (0 , 16) 
Error! No paths have been found! Try different coordinates or try changing the max distance limit 
(Shortest distance: 16 , Number of paths: 0 ) 

TEST 8: (Invalid input) [This test checks if input constraint takes a string]
Invalid input! Please enter five integers!

TEST 9: (1, 1) [This test checks high value]
Max Step in one direction: 2000 | Robot (X, Y)-> (2000 , 1) | Treasure (X,Y)-> (2000 , 2) 
N↑ 
(Shortest distance: 1 , Number of paths: 1 ) 

TEST 10: (9, 1) [This test checks a possible straight line]
Max Step in one direction: 9 | Robot (X, Y)-> (0 , 0) | Treasure (X,Y)-> (0 , 9) 
N↑ N↑ N↑ N↑ N↑ N↑ N↑ N↑ N↑ 
(Shortest distance: 9 , Number of paths: 1 ) 

TEST 11: (Invalid input) [This test checks if input constraint takes a char]
Invalid input! Please enter five integers!

TEST 12: (1,0(No path) ) [This test checks a negative max distance input]
Max Step in one direction: -1 | Robot (X, Y)-> (0 , 0) | Treasure (X,Y)-> (0 , 1) 
Error! No paths have been found! Try different coordinates or try changing the max distance limit 
(Shortest distance: 1 , Number of paths: 0 ) 

TEST 13: (Same start and end point) [This test checks all negavtive input integers]
The robot's starting point matches the treasure's endpoint.

TEST 14: (5, 0(No path)) [This test checks max number as 0]
Max Step in one direction: 0 | Robot (X, Y)-> (1 , 3) | Treasure (X,Y)-> (4 , 5) 
Error! No paths have been found! Try different coordinates or try changing the max distance limit 
(Shortest distance: 5 , Number of paths: 0 ) 

